{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","width","frameSize","step","animationDuration","useState","move","setMove","itemWidth","maxNextMove","length","mover","transform","transition","containerStyles","className","style","map","image","index","src","alt","type","onClick","prevMove","moveBack","disabled","moveNext","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","action","method","htmlFor","id","name","value","onChange","event","target","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56def836.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  width: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images, width, frameSize, step, animationDuration,\n}) => {\n  const [move, setMove] = useState(0);\n  const itemWidth = { width: `${width}px` };\n  const maxNextMove = (images.length - frameSize) * -width;\n  const mover = {\n    transform: `translate(${move}px)`,\n    transition: `all ${animationDuration}ms`,\n  };\n\n  const containerStyles = {\n    width: `${width * frameSize}px`,\n    transition: `all ${animationDuration}ms`,\n  };\n\n  const handlePrev = () => {\n    setMove((prevMove) => {\n      const moveBack = prevMove + width * step;\n\n      if (moveBack > 0) {\n        return 0;\n      }\n\n      return moveBack;\n    });\n  };\n\n  const handleNext = () => {\n    setMove((prevMove) => {\n      const moveNext = prevMove - width * step;\n\n      if (moveNext < maxNextMove) {\n        return maxNextMove;\n      }\n\n      return moveNext;\n    });\n  };\n\n  return (\n    <>\n      <div className=\"Carousel\" style={containerStyles}>\n        <ul className=\"Carousel__list\" style={mover}>\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index}`}\n                style={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handlePrev}\n          disabled={move === 0}\n        >\n          {'<<<Prev'}\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={move === maxNextMove}\n        >\n          {'Next>>>'}\n        </button>\n      </div>\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(1);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n      <form action=\"/\" method=\"POST\">\n        <label className=\"label\" htmlFor=\"itemId\">Item Width:</label>\n        <input\n          className=\"input\"\n          type=\"number\"\n          id=\"itemId\"\n          name=\"itemWidth\"\n          step=\"10\"\n          value={itemWidth}\n          onChange={(event) => {\n            setItemWidth(+event.target.value);\n          }}\n        />\n        <label className=\"label\" htmlFor=\"frameSize\">Frame Size:</label>\n        <input\n          className=\"input\"\n          type=\"number\"\n          id=\"frameSize\"\n          name=\"frameSize\"\n          min=\"1\"\n          max=\"10\"\n          value={frameSize}\n          onChange={(event) => {\n            setFrameSize(+event.target.value);\n          }}\n        />\n        <label className=\"label\" htmlFor=\"step\">Step:</label>\n        <input\n          className=\"input\"\n          type=\"number\"\n          id=\"step\"\n          name=\"step\"\n          min=\"1\"\n          max=\"10\"\n          value={step}\n          onChange={(event) => {\n            setStep(+event.target.value);\n          }}\n        />\n        <label className=\"label\" htmlFor=\"duration\">Animation duration:</label>\n        <input\n          className=\"input\"\n          type=\"number\"\n          id=\"duration\"\n          name=\"duration\"\n          step=\"100\"\n          value={animationDuration}\n          onChange={(event) => {\n            setAnimationDuration(+event.target.value);\n          }}\n        />\n      </form>\n\n      <Carousel\n        images={images}\n        width={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}